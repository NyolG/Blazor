@page "/registrar"
@layout LoginLayout

@inject HttpClient httpClient
@using BlazorABC.Client.Extensiones
@using CRUD.Compartir
@using Microsoft.AspNetCore.Components.Authorization
@inject AuthenticationStateProvider autenticacionProvider
@inject NavigationManager navManager
@inject IUsuarioServicio usuariosService;


@using CurrieTechnologies.Razor.SweetAlert2;
@inject SweetAlertService sqal;

<div class="row mt-5">

    <div class="col-lg-4 offset-lg-4 border">

        <div class="mb-3 text-center">
            <h3>Nuevo usuario</h3>
        </div>

        <div class="mb-3">
            <label>Usuario</label>
            <input @bind="nus.usuario" id="us" class="form-control" />
        </div>

        <div class="mb-3">
            <label>Contraseña</label>
            <input @bind="nus.password" class="form-control" />
        </div>

        <div class="mb-3">
            <label>Confirma Contraseña</label>
            <input @bind="nus.confi" class="form-control" />
        </div>

        <div class="mb-3">
            <button @onclick="guarda" class="btn btn-primary">Guardar</button>
        </div>
        <div class="mb-3">
            <a href="/" class="btn btn-primary">Volcer</a>
        </div>

    </div>

</div>

@code {
    private CRUD.Compartir.Nuevous nus = new CRUD.Compartir.Nuevous();

    private async Task guarda()
    {

        var LoginResponse = await httpClient.GetFromJsonAsync<Responses<Clase1>>($"api/usuarios/buscar/{nus.usuario}");

        if(LoginResponse.Correcto)
        {
            await sqal.FireAsync(new SweetAlertOptions
                {
                    Title = "Error",
                    Text = "Usuario ya existe",

                });

         
        }
       else
        {

            if (nus.password == nus.confi)
            {
                Clase1 n = new Clase1();
                n.Username = nus.usuario;
                n.Pass = nus.password;

                var r = await usuariosService.guardar(n);
                if (r != 0)
                {
                    await sqal.FireAsync(new SweetAlertOptions
                        {
                            Title = "Correcto",
                            Text = "Usuario registrado!",

                        });
                        navManager.NavigateTo("/");
                }
                else
                {
                    await sqal.FireAsync(new SweetAlertOptions
                        {
                            Title = "Error",
                            Text = "no registrado",

                        });
                }

            }
            else
            {
                await sqal.FireAsync(new SweetAlertOptions
                    {
                        Title = "Error",
                        Text = "Contraseña no coincide!",

                    });
            }


        }
    }


}
